const cityInput = document.querySelector(".city-input"); constsearchButton=document.querySelector(".search-btn");
constlocationButton=document.querySelector(".location-btn");

constcurrentWeatherDiv=document.querySelector(".current-weather"); const weatherCardsDiv = document.querySelector(".weather-cards");


constAPI_KEY="4f3f6622f7f1ed5e82ca097d8349184c";//APIkeyfor OpenWeatherMap API



constcreateWeatherCard=(cityName,weatherItem,index)=>{ if(index === 0) { // HTML for the main weather card
return`<divclass="details">

<h2>${cityName}(${weatherItem.dt_txt.split("")[0]})</h2>

<h6>Temperature:${(weatherItem.main.temp- 273.15).toFixed(2)}°C</h6>
<h6>Wind:${weatherItem.wind.speed}M/S</h6>

<h6>Humidity:${weatherItem.main.humidity}%</h6>

</div>
 
<divclass="icon">

<img src="https://openweathermap.org/img/wn/${weatherItem.weather[0].icon}@4x. png" alt="weather-icon">
<h6>${weatherItem.weather[0].description}</h6>

</div>`;

}else{//HTMLfortheotherfivedayforecastcard return `<li class="card">
    const API_KEY = "your_api_key_here"; // Replace with your actual API key

    const getWeatherDetails = (cityName, latitude, longitude) => {
        const WEATHER_API_URL = `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;
    
        fetch(WEATHER_API_URL)
            .then(response => response.json())
            .then(data => {
                if (data.cod !== "200") {
                    console.error("Error fetching weather data:", data.message);
                    return;
                }
    
                const weatherList = data.list.slice(0, 5); // Get first 5 forecasts (example)
                let weatherHTML = "";
    
                weatherList.forEach(weatherItem => {
                    weatherHTML += `
                    <li>
                        <h3>(${weatherItem.dt_txt.split(" ")[0]})</h3>
                        <img src="https://openweathermap.org/img/wn/${weatherItem.weather[0].icon}@4x.png" alt="weather-icon">
                        <h6>Temp: ${(weatherItem.main.temp - 273.15).toFixed(2)}°C</h6>
                        <h6>Wind: ${weatherItem.wind.speed} M/S</h6>
                        <h6>Humidity: ${weatherItem.main.humidity}%</h6>
                    </li>`;
                });
    
                document.getElementById("weatherContainer").innerHTML = weatherHTML;
            })
            .catch(error => console.error("Error fetching data:", error));
    };
    
    // Example usage
    getWeatherDetails("London", 51.5074, -0.1278);
    



fetch(WEATHER_API_URL).then(response=>response.json()).then(data
=>{

//Filtertheforecaststogetonlyoneforecastperday const uniqueForecastDays = [];
constfiveDaysForecast=data.list.filter(forecast=>{

constforecastDate=newDate(forecast.dt_txt).getDate(); if (!uniqueForecastDays.includes(forecastDate)) {
returnuniqueForecastDays.push(forecastDate);

}

});



// Clearing previous weather data cityInput.value = ""; currentWeatherDiv.innerHTML="";
 
weatherCardsDiv.innerHTML="";



//CreatingweathercardsandaddingthemtotheDOM fiveDaysForecast.forEach((weatherItem, index) => {
consthtml=createWeatherCard(cityName,weatherItem,index); if (index === 0) {
currentWeatherDiv.insertAdjacentHTML("beforeend",html);

}else {

weatherCardsDiv.insertAdjacentHTML("beforeend",html);

}

});

}).catch(()=>{

alert("Anerroroccurredwhilefetchingtheweatherforecast!");

});

}



constgetCityCoordinates=()=>{

constcityName=cityInput.value.trim();
 
if(cityName==="")return;

constAPI_URL=
`https://api.openweathermap.org/geo/1.0/direct?q=${cityName}&limit=1&appi d=${API_KEY}`;



//Getenteredcitycoordinates(latitude,longitude,andname)fromtheAPI response
fetch(API_URL).then(response=>response.json()).then(data=>{

if(!data.length)returnalert(`Nocoordinatesfoundfor${cityName}`); const { lat, lon, name } = data[0];
getWeatherDetails(name,lat,lon);

}).catch(()=>{

alert("Anerroroccurredwhilefetchingthecoordinates!");

});

}



const getUserCoordinates = () => { navigator.geolocation.getCurrentPosition(
position=>{
 
const{latitude,longitude}=position.coords;//Getcoordinatesofuser location
//GetcitynamefromcoordinatesusingreversegeocodingAPI

const API_URL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${latitude}&lon=${longitude}&limit=1&appid=${API_KEY}`;

fetch(API_URL).then(response=>response.json()).then(data=>{ const { name } = data[0];
getWeatherDetails(name,latitude,longitude);

}).catch(()=>{

alert("Anerroroccurredwhilefetchingthecityname!");

});

},

error=>{//Showalertifuserdeniedthelocationpermission if (error.code === error.PERMISSION_DENIED) {
alert("Geolocationrequestdenied.Pleaseresetlocationpermissionto grant access again.");
}else {
    alert("Geolocation request error. Please reset location permission.");
}


locationButton.addEventListener("click",getUserCoordinates);

searchButton.addEventListener("click",getCityCoordinates);

cityInput.addEventListener("keyup",e=>e.key==="Enter"&&getCityCoordinates());
